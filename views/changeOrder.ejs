<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>HTML5 Drag & Drop - Handle-Only + Client-Side Reorder</title>
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

    <link rel="stylesheet" href="/style.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/spinner.css">
    <script src="/spinner.js"></script>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-F554SC9QFM"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());
        gtag('config', 'G-F554SC9QFM');
    </script>

    <style>
        body {
            padding-top: 70px;
        }

        .nav-item {
            list-style: none;
        }

        .side-menu {
            position: fixed;
            top: 0;
            left: 0;
            width: 250px;
            height: 100vh;
            background: #f8f9fa;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
            transform: translateX(-100%);
            transition: transform 0.3s ease;
            z-index: 2000;
            padding: 1rem;
        }

        .side-menu.show {
            transform: translateX(0);
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            float: right;
            margin-bottom: 1rem;
        }

        .preview-container img {
            max-width: 100px;
            height: auto;
            margin: 5px;
        }

        /* ===========================================
           반응형 6-4-2 열 구조 + 중앙 정렬
           =========================================== */
        #imageList {
            display: grid;
            grid-auto-rows: auto;
            gap: 1rem;
            justify-content: center;
            justify-items: center;
        }

        /* 1200px 이상 → 6열 */
        @media (min-width: 1200px) {
            #imageList {
                grid-template-columns: repeat(6, 200px);
            }
        }

        /* 768px 이상~1199px 이하 → 4열 */
        @media (min-width: 768px) and (max-width: 1199px) {
            #imageList {
                grid-template-columns: repeat(4, 200px);
            }
        }

        /* 767px 이하 → 2열 */
        @media (max-width: 767px) {
            #imageList {
                grid-template-columns: repeat(2, 200px);
            }
        }

        /* 드래그 over 시 시각 효과 */
        .image-item.drag-over {
            outline: 3px dashed red;
        }

        /* 이미지 아이템 배치 */
        .image-item {
            position: relative;
            width: 200px;
            cursor: default; /* 기본적으로 드래그 안 됨 */
            border: none;
        }

        /* 드래그 핸들 커서 변경 */
        .drag-handle {
            position: absolute;
            top: 10px;
            right: 5px;
            z-index: 10;
            cursor: move;
        }

        /* 숫자카드 스타일 (카테고리 !== 1 일 때만 표시) */
        .order-label {
            position: absolute; 
            top: 10px; 
            left: 10px;
            z-index: 10; 
            background: rgba(255,255,255,0.7);
            padding: 6px 6px; 
            border-radius: 4px; 
            font-weight: bold;
        }
    </style>
</head>

<body>
    <!-- 스피너(로딩) 영역 -->
    <div id="spinnerOverlay" class="spinner-backdrop" style="display:flex;">
        <div class="spinner"></div>
    </div>

    <!-- 상단 고정 네비바 -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light px-3 fixed-top">
        <div class="container-fluid d-flex align-items-center justify-content-between">
            <div class="d-flex align-items-center">
                <button class="navbar-toggler d-lg-none me-2" type="button" data-bs-toggle="collapse"
                        data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <a class="navbar-brand fw-bold" href="/manage">대시보드</a>
            </div>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                </ul>
            </div>
            <ul class="navbar-nav d-flex flex-row align-items-center me-3">
                <li class="nav-item dropdown me-3">
                    <a class="nav-link dropdown-toggle" id="orderDropdown" role="button" data-bs-toggle="dropdown"
                       aria-expanded="false">
                        순서변경
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="orderDropdown">
                        <% category.forEach(item=> { %>
                            <li>
                                <a class="dropdown-item" href="/changeOrder?category=<%= item.id %>">
                                    <%= item.categoryName %>
                                </a>
                            </li>
                        <% }) %>
                    </ul>
                </li>
                <li class="nav-item me-3">
                    <a class="nav-link" href="/edit">게시글 수정/삭제</a>
                </li>
                <li class="nav-item me-3">
                    <a class="nav-link" href="/visitors">방문자</a>
                </li>
            </ul>

            <!-- 업로드 버튼 -->
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#uploadModal">
                업로드
            </button>

            <!-- 수정 완료 버튼: categoryNum != 1 -->
            <% if (Number(categoryNum) !==1) { %>
                <button id="saveChangesBtn" class="btn btn-warning mx-3">
                    수정 완료
                </button>
            <% } %>
        </div>
    </nav>

    <!-- 모바일 사이드 메뉴 -->
    <div id="sideMenu" class="side-menu">
        <button id="closeMenu" class="close-btn">&times;</button>
        <ul class="navbar-nav">
            <li class="nav-item"><a class="nav-link" href="/edit">게시글 수정/삭제</a></li>
            <li class="nav-item"><a class="nav-link" href="/visitors">방문자</a></li>
        </ul>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const menuToggle = document.getElementById("menuToggle");
            const sideMenu = document.getElementById("sideMenu");
            const closeMenu = document.getElementById("closeMenu");
            if (menuToggle) {
                menuToggle.addEventListener("click", () => sideMenu.classList.add("show"));
            }
            closeMenu.addEventListener("click", () => sideMenu.classList.remove("show"));
            document.addEventListener("click", (evt) => {
                if (!sideMenu.contains(evt.target) && menuToggle && !menuToggle.contains(evt.target)) {
                    sideMenu.classList.remove("show");
                }
            });
        });
    </script>

    <!-- 메인 컨테이너 -->
    <div class="container">
        <h1 class="h3">
            현재 카테고리:
            <% let categoryName='전체' ; %>
            <% category.forEach(item=> {
                if (item.id == categoryNum) categoryName = item.categoryName;
            }); %>
            <%= categoryName %>
        </h1>

        <div class="container">
            <li class="nav-item dropdown me-3">
                <a class="nav-link dropdown-toggle" id="orderDropdown" role="button" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    카테고리
                </a>
                <ul class="dropdown-menu" aria-labelledby="orderDropdown">
                    <% category.forEach(item=> { %>
                        <li>
                            <a class="dropdown-item" href="/changeOrder?category=<%= item.id %>">
                                <%= item.categoryName %>
                            </a>
                        </li>
                    <% }) %>
                </ul>
            </li>

            <!-- HTML5 Drag & Drop (같은 행/열만 교환) + 핸들 클릭 시에만 드래그 가능 -->
            <div id="imageList">
                <% if (post && post.length> 0) { %>
                    <% post.forEach(item=> { %>
                        <div class="image-item card" data-id="<%= item.id %>" data-row="0" data-col="0"
                             draggable="false">

                            <!-- (카테고리 !== 1 일 때만 숫자카드 보이기) -->
                            <% if (Number(categoryNum) !== 1) { %>
                                <div class="order-label">
                                    <%= item.sortOrder %>
                                </div>
                            <% } %>

                            <!-- 이미지와 삭제 버튼 -->
                            <div style="position:relative; width:200px; border:none;">
                                <img src="<%= item.imageUrl %>" alt="Uploaded Image" class="img-fluid rounded d-block"
                                     style="width: 100%; height: auto; display: block;">

                                <!-- 삭제 버튼(우측 하단) -->
                                <form action="/post/delete" method="POST"
                                      style="position: absolute; bottom:5px; right:5px; z-index: 20;"
                                      onsubmit="return confirm('정말로 삭제하시겠습니까?');">
                                    <input type="hidden" name="postId" value="<%= item.id %>">
                                    <input type="hidden" name="currentCategory" value="<%= categoryNum %>">
                                    <button type="submit" class="btn btn-sm btn-danger">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                            </div>

                            <!-- 드래그 핸들 (카테고리 !== 1 일 때만 표시) -->
                            <% if (Number(categoryNum) !==1) { %>
                                <div class="drag-handle"
                                     style="position:absolute; top:10px; right:5px; z-index:10; cursor:move;">
                                    <i class="bi bi-grip-vertical" style="font-size:2.5rem; color:#333;"></i>
                                </div>
                            <% } %>
                        </div>
                    <% }) %>
                <% } else { %>
                    <p class="text-center mt-4">No post available.</p>
                <% } %>
            </div>
        </div>
    </div>

    <!-- 업로드 모달 -->
    <div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">이미지 업로드</h5>
            <button class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body text-center">
            <select id="categorySelect" class="form-select mb-2">
              <% category.forEach(item=> { %>
                <% if (item.id !==1) { %>
                  <option value="<%= item.id %>"><%= item.categoryName %></option>
                <% } %>
              <% }) %>
            </select>
            <input type="file" id="imageInput" class="form-control mb-2" accept="image/*" multiple>
            <div id="previewContainer" class="preview-container d-flex flex-wrap justify-content-center"></div>
          </div>
          <div class="modal-footer">
            <button class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
            <button class="btn btn-primary" id="uploadButton">업로드</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap Bundle JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <!-- 여기서 categoryNum이 "1"이면 드래그 로직 비활성화 -->
    <script>
        const categoryNumFromServer = <%= Number(categoryNum) %>;
        const isDragEnabled = (categoryNumFromServer !== 1);

        // “같은 행/열만 교환” + 핸들 클릭 시에만 드래그 가능
        function sameRowOrCol(r1, c1, r2, c2) {
            return (r1 === r2 || c1 === c2);
        }
        function swapDom(parent, elA, elB) {
            if (elA === elB) return;
            const children = Array.from(parent.children);
            const idxA = children.indexOf(elA);
            const idxB = children.indexOf(elB);
            if (idxA < 0 || idxB < 0) return;

            if (idxA < idxB) {
                parent.insertBefore(elB, elA);
                parent.insertBefore(elA, children[idxB + 1] || null);
            } else {
                parent.insertBefore(elA, elB);
                parent.insertBefore(elB, children[idxA + 1] || null);
            }
        }

        // reassignOrderLabels: 숫자카드 갱신
        function reassignOrderLabels() {
            const items = document.querySelectorAll('#imageList .image-item');
            items.forEach((el, idx) => {
                // 카테고리 !== 1 인 경우만 라벨 변경
                if (categoryNumFromServer !== 1) {
                    const label = el.querySelector('.order-label');
                    if (label) {
                        label.textContent = (idx + 1).toString();
                    }
                }
            });
        }

        document.addEventListener('DOMContentLoaded', () => {
            const imageList = document.getElementById('imageList');
            const items = Array.from(imageList.children);

            if (isDragEnabled) {
                items.forEach(item => {
                    const handle = item.querySelector('.drag-handle');
                    if (handle) {
                        handle.addEventListener('mousedown', () => {
                            item.setAttribute('draggable', 'true');
                        });
                        handle.addEventListener('mouseup', () => {
                            item.setAttribute('draggable', 'false');
                        });
                        handle.addEventListener('mouseleave', () => {
                            item.setAttribute('draggable', 'false');
                        });
                    }

                    item.addEventListener('dragstart', (e) => {
                        e.dataTransfer.effectAllowed = "move";
                        window.dragEl = item;
                        window.dragRow = parseInt(item.getAttribute('data-row'), 10);
                        window.dragCol = parseInt(item.getAttribute('data-col'), 10);
                    });

                    item.addEventListener('dragover', (e) => {
                        const overRow = parseInt(item.getAttribute('data-row'), 10);
                        const overCol = parseInt(item.getAttribute('data-col'), 10);
                        if (sameRowOrCol(window.dragRow, window.dragCol, overRow, overCol)) {
                            e.preventDefault();
                            item.classList.add('drag-over');
                        }
                    });

                    item.addEventListener('dragleave', () => {
                        item.classList.remove('drag-over');
                    });

                    item.addEventListener('drop', (e) => {
                        e.preventDefault();
                        item.classList.remove('drag-over');
                        const dropRow = parseInt(item.getAttribute('data-row'), 10);
                        const dropCol = parseInt(item.getAttribute('data-col'), 10);
                        if (!sameRowOrCol(window.dragRow, window.dragCol, dropRow, dropCol)) return;

                        if (window.dragEl && window.dragEl !== item) {
                            swapDom(imageList, window.dragEl, item);

                            // data-row, data-col 교환
                            window.dragEl.setAttribute('data-row', dropRow);
                            window.dragEl.setAttribute('data-col', dropCol);
                            item.setAttribute('data-row', window.dragRow);
                            item.setAttribute('data-col', window.dragCol);

                            // 드롭 후 DOM 순서 다시 매기기
                            reassignOrderLabels();
                        }
                    });

                    item.addEventListener('dragend', () => {
                        item.classList.remove('drag-over');
                        item.setAttribute('draggable', 'false');
                    });
                });

                // 페이지 로딩 시 한 번 전체 라벨 재할당
                reassignOrderLabels();
            }

            // “수정 완료” 버튼 클릭 시
            const saveBtn = document.getElementById('saveChangesBtn');
            if (saveBtn && isDragEnabled) {
                saveBtn.addEventListener('click', () => {
                    showSpinner();
                    setTimeout(() => hideSpinner(), 100);

                    const items2 = imageList.querySelectorAll('.image-item');
                    const orderData = [];
                    items2.forEach((el, idx) => {
                        const postId = el.getAttribute('data-id');
                        orderData.push({ id: postId, sortOrder: idx + 1 });
                    });

                    fetch('/post/updateOrder', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(orderData)
                    })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('업데이트 실패:' + data.message);
                        }
                    })
                    .catch(err => {
                        console.error('업데이트 에러:', err);
                        alert('서버 통신 오류');
                    });
                });
            }
        });
    </script>

    <!-- 업로드 로직 -->
    <script>
        document.getElementById('imageInput').addEventListener('change', (e) => {
            const files = e.target.files;
            const previewContainer = document.getElementById('previewContainer');
            previewContainer.innerHTML = '';

            if (files && files.length > 0) {
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    const reader = new FileReader();
                    reader.onload = (evt) => {
                        const img = document.createElement('img');
                        img.src = evt.target.result;
                        img.classList.add('img-fluid', 'rounded');
                        previewContainer.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                }
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            const uploadButton = document.getElementById('uploadButton');
            const imageInput = document.getElementById('imageInput');
            const categorySelect = document.getElementById('categorySelect');

            uploadButton.addEventListener('click', () => {
                showSpinner();
                setTimeout(() => hideSpinner(), 400);

                const files = imageInput.files;
                if (!files.length) {
                    alert("이미지를 선택하세요!");
                    return;
                }
                const formData = new FormData();
                formData.append("category", categorySelect.value);
                for (let i = 0; i < files.length; i++) {
                    formData.append("images", files[i]);
                }

                fetch("/upload/process", {
                    method: "POST",
                    body: formData
                })
                .then(res => res.json())
                .then(data => {
                    alert("이미지 업로드 완료");
                    location.reload();
                })
                .catch(err => {
                    console.error('업로드 에러:', err);
                    alert("업로드 실패!");
                });
            });
        });
    </script>

</body>
</html>