<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Manage - Bar Chart Example</title>
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Chart.js (CDN) -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body class="p-3">
    <!-- 네비게이션(사이드메뉴 포함) 불러오기 -->
    <%- include('partials/navbar') %>

    <div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">이미지 업로드</h5>
                    <button class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body text-center">
                    <select id="categorySelect" class="form-select mb-2">
                        <% category.forEach(item=> { %>
                            <% if (item.id !==1) { %>
                                <option value="<%= item.id %>">
                                    <%= item.categoryName %>
                                </option>
                                <% } %>
                                    <% }) %>
                    </select>
                    <input type="file" id="imageInput" class="form-control mb-2" accept="image/*" multiple>
                    <div id="previewContainer" class="preview-container d-flex flex-wrap justify-content-center"></div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
                    <button class="btn btn-primary" id="uploadButton">업로드</button>
                </div>
            </div>
        </div>
    </div>

        <div class="container" style="padding-top: 100px;">
            <!-- row에 g-5 클래스 그대로 -->
            <div class="row g-5">
                <!-- 왼쪽(차트) 약 33% -->
                <div class="col-lg-4 col-md-5 col-12 mb-3">
                    <h2 class="h5"></h2>
                    <!-- 총 방문자수 표시 영역 추가 -->
                    <h4 id="totalVisitors" style="font-weight:bold;" class="text-center h5"></h4>
                    <canvas id="myChart" width="400" height="200"></canvas>
                </div>

                <!-- 오른쪽(이미지) 약 67% -->
                <div class="col-lg-8 col-md-7 col-12 border p-4 rounded">
                    <div class="d-flex justify-content-between mb-4">
                        <h1 class="h5">최근 게시한 이미지</h1>
                        <a href="/changeOrder?category=1" class="btn btn-warning">전체보기</a>
                    </div>
                    <!-- 이미지 목록 -->
                    <div id="imageList" class="row g-3">
                        <% if (post && post.length> 0) { %>
                            <% post.forEach(item=> { %>
                                <div class="col-6 col-lg-3 col-md-4 col-sm-6">
                                    <div class="card">
                                        <img src="<%= item.imageUrl %>" class="card-img-top" alt="Uploaded Image">
                                    </div>
                                </div>
                                <% }) %>
                                    <% } else { %>
                                        <p class="mt-3">No post available.</p>
                                        <% } %>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sortable.js (드래그용) -->
        <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const imageList = document.getElementById('imageList');
                new Sortable(imageList, {
                    animation: 150,
                    handle: '.image-item',
                    onEnd: function (evt) {
                        console.log('드래그 완료');
                    }
                });
            });
        </script>

        <!-- 그래프 생성 스크립트 -->
        <script>
            const dailyData = <%- JSON.stringify(dailyData) %>;
            console.log("dailyData:", dailyData);
            let totalVisitor = 0;
            const values = dailyData.map(item => parseFloat(item.count));
            const totalVisitors = values.reduce((acc, cur) => acc + cur, 0);

            const labelArray = dailyData.map((_, i, arr) => {
                if (i === 0) {
                    totalVisitor = arr.length;
                    return `${arr.length - 1}일 전`;
                }
                if (i === arr.length - 1) {
                    return "오늘";
                }
                return "";
            });

            const totalDisplay = document.getElementById('totalVisitors');
            totalDisplay.textContent = `${totalVisitor}일 간 방문자 수 : ${parseInt(totalVisitors, 10)}명`;

            const ctx = document.getElementById('myChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labelArray,
                    datasets: [{
                        label: '방문자 수',
                        data: values,
                        backgroundColor: 'rgb(32, 172, 254)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            grid: { display: false },
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: '방문자 수',
                                font: { weight: 'bold' }
                            },
                            ticks: {
                                font: { weight: 'bold' },
                                callback: function (value) {
                                    return parseInt(value, 10);
                                }
                            }
                        },
                        x: {
                            grid: { display: false },
                            title: {
                                display: true, text: '', font: { weight: 'bold' }
                            },
                            ticks: {
                                autoSkip: false,
                                font: { weight: 'bold' }
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            labels: { font: { weight: 'bold' } }
                        }
                    }
                }
            });
        </script>

        <!-- Bootstrap JS -->
         <script>
            
        document.getElementById('imageInput').addEventListener('change', (e) => {
            const files = e.target.files;
                    const previewContainer = document.getElementById('previewContainer');
                    previewContainer.innerHTML = '';

            if (files && files.length > 0) {
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    const reader = new FileReader();
                    reader.onload = (evt) => {
                        const img = document.createElement('img');
                    img.src = evt.target.result;
                    img.classList.add('img-fluid', 'rounded');
                    previewContainer.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                }
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            const uploadButton = document.getElementById('uploadButton');
                    const imageInput = document.getElementById('imageInput');
                    const categorySelect = document.getElementById('categorySelect');

            uploadButton.addEventListener('click', () => {
              

                    const files = imageInput.files;
                    if (!files.length) {
                        alert("이미지를 선택하세요!");
                    return;
                }
                    const formData = new FormData();
                    formData.append("category", categorySelect.value);
                    for (let i = 0; i < files.length; i++) {
                        formData.append("images", files[i]);
                }

                    fetch("/upload/process", {
                        method: "POST",
                    body: formData
                })
                .then(res => res.json())
                .then(data => {
                        alert("이미지 업로드 완료");
                    location.reload();
                })
                .catch(err => {
                        console.error('업로드 에러:', err);
                    alert("업로드 실패!");
                });
            });
        });
          
         </script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>